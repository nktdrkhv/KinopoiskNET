//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#nullable enable

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 612 // Disable "CS0612 '...' is obsolete"
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"
#pragma warning disable 8603 // Disable "CS8603 Possible null reference return"

namespace Kinopoisk
{
    using System.Collections.Generic;
    using System = global::System;



    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ExternalId
    {
        /// <summary>
        /// ID из kinopoisk HD
        /// </summary>
        [JsonProperty("kpHD", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? KpHD { get; set; } = default!;

        [JsonProperty("imdb", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Imdb { get; set; } = default!;

        [JsonProperty("tmdb", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Tmdb { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Name
    {
        [JsonProperty("name", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Name1 { get; set; } = default!;

        [JsonProperty("language", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Language { get; set; } = default!;

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Type { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Rating
    {
        /// <summary>
        /// Рейтинг кинопоиска
        /// </summary>
        [JsonProperty("kp", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Kp { get; set; } = default!;

        /// <summary>
        /// Рейтинг IMDB
        /// </summary>
        [JsonProperty("imdb", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Imdb { get; set; } = default!;

        /// <summary>
        /// Рейтинг TMDB
        /// </summary>
        [JsonProperty("tmdb", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Tmdb { get; set; } = default!;

        /// <summary>
        /// Рейтинг кинокритиков
        /// </summary>
        [JsonProperty("filmCritics", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? FilmCritics { get; set; } = default!;

        /// <summary>
        /// Рейтинг кинокритиков из РФ
        /// </summary>
        [JsonProperty("russianFilmCritics", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? RussianFilmCritics { get; set; } = default!;

        /// <summary>
        /// Рейтинг основанный на ожиданиях пользователей
        /// </summary>
        [JsonProperty("await", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Await { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Votes
    {
        [JsonProperty("kp", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Kp { get; set; } = default!;

        [JsonProperty("imdb", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Imdb { get; set; } = default!;

        [JsonProperty("tmdb", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Tmdb { get; set; } = default!;

        /// <summary>
        /// Количество голосов кинокритиков
        /// </summary>
        [JsonProperty("filmCritics", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? FilmCritics { get; set; } = default!;

        /// <summary>
        /// Количество голосов кинокритиков из РФ
        /// </summary>
        [JsonProperty("russianFilmCritics", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? RussianFilmCritics { get; set; } = default!;

        /// <summary>
        /// Количество ожидающих выхода
        /// </summary>
        [JsonProperty("await", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Await { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Logo
    {
        /// <summary>
        /// Чтобы найти фильмы с этим полем, используйте: `!null`
        /// </summary>
        [JsonProperty("url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Url { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ShortImage
    {
        /// <summary>
        /// Чтобы найти фильмы с этим полем, используйте: `!null`
        /// </summary>
        [JsonProperty("url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Url { get; set; } = default!;

        /// <summary>
        /// Чтобы найти фильмы с этим полем, используйте: `!null`
        /// </summary>
        [JsonProperty("previewUrl", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? PreviewUrl { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Video
    {
        /// <summary>
        /// Url трейлера
        /// </summary>
        [JsonProperty("url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Url { get; set; } = default!;

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } = default!;

        [JsonProperty("site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Site { get; set; } = default!;

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Type { get; set; } = default!;

        [JsonProperty("size", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Size { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class VideoTypes
    {
        [JsonProperty("trailers", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Video> Trailers { get; set; } = default!;

        [JsonProperty("teasers", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Video> Teasers { get; set; } = new System.Collections.ObjectModel.Collection<Video>();

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ItemName
    {
        [JsonProperty("name", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Name { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PersonInMovie
    {
        /// <summary>
        /// Id персоны с кинопоиска
        /// </summary>
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Id { get; set; } = default!;

        [JsonProperty("photo", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Photo { get; set; } = default!;

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } = default!;

        [JsonProperty("enName", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? EnName { get; set; } = default!;

        [JsonProperty("description", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Description { get; set; } = default!;

        [JsonProperty("profession", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Profession { get; set; } = default!;

        [JsonProperty("enProfession", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string EnProfession { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ReviewInfo
    {
        [JsonProperty("count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Count { get; set; } = default!;

        [JsonProperty("positiveCount", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? PositiveCount { get; set; } = default!;

        [JsonProperty("percentage", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Percentage { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SeasonInfo
    {
        [JsonProperty("number", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Number { get; set; } = default!;

        [JsonProperty("episodesCount", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? EpisodesCount { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CurrencyValue
    {
        /// <summary>
        /// Сумма
        /// </summary>
        [JsonProperty("value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Value { get; set; } = default!;

        /// <summary>
        /// Валюта
        /// </summary>
        [JsonProperty("currency", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Currency { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Fees
    {
        [JsonProperty("world", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public CurrencyValue World { get; set; } = default!;

        [JsonProperty("russia", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public CurrencyValue Russia { get; set; } = default!;

        [JsonProperty("usa", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public CurrencyValue Usa { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Premiere
    {
        [JsonProperty("country", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Country { get; set; } = default!;

        /// <summary>
        /// Для более релевантного поиска, используйте интервал дат 01.02.2022-01.02.2023
        /// </summary>
        [JsonProperty("world", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? World { get; set; } = default!;

        /// <summary>
        /// Для более релевантного поиска, используйте интервал дат 01.02.2022-01.02.2023
        /// </summary>
        [JsonProperty("russia", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Russia { get; set; } = default!;

        [JsonProperty("digital", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Digital { get; set; } = default!;

        /// <summary>
        /// Для более релевантного поиска, используйте интервал дат 01.02.2022-01.02.2023
        /// </summary>
        [JsonProperty("cinema", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Cinema { get; set; } = default!;

        [JsonProperty("bluray", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Bluray { get; set; } = default!;

        [JsonProperty("dvd", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Dvd { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LinkedMovie
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Id { get; set; } = default!;

        [JsonProperty("name", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Name { get; set; } = default!;

        [JsonProperty("enName", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string EnName { get; set; } = default!;

        [JsonProperty("alternativeName", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string AlternativeName { get; set; } = default!;

        [JsonProperty("type", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Type { get; set; } = default!;

        [JsonProperty("poster", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public ShortImage Poster { get; set; } = new ShortImage();

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class WatchabilityItem
    {
        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } = default!;

        [JsonProperty("logo", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public Logo Logo { get; set; } = new Logo();

        [JsonProperty("url", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Url { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Watchability
    {
        [JsonProperty("items", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<WatchabilityItem> Items { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class YearRange
    {
        /// <summary>
        /// Год начала
        /// </summary>
        [JsonProperty("start", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Start { get; set; } = default!;

        /// <summary>
        /// Год окончания
        /// </summary>
        [JsonProperty("end", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? End { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Audience
    {
        /// <summary>
        /// Количество просмотров в кино
        /// </summary>
        [JsonProperty("count", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Count { get; set; } = default!;

        /// <summary>
        /// Страна в которой проходил показ
        /// </summary>
        [JsonProperty("country", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Country { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class FactInMovie
    {
        [JsonProperty("value", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Value { get; set; } = default!;

        [JsonProperty("type", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Type { get; set; } = default!;

        [JsonProperty("spoiler", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public bool Spoiler { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Images
    {
        [JsonProperty("postersCount", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double PostersCount { get; set; } = default!;

        [JsonProperty("backdropsCount", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double BackdropsCount { get; set; } = default!;

        [JsonProperty("framesCount", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double FramesCount { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class VendorImage
    {
        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } = default!;

        [JsonProperty("url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Url { get; set; } = default!;

        [JsonProperty("previewUrl", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? PreviewUrl { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class MovieDtoV1_3
    {
        /// <summary>
        /// Id фильма с кинопоиска
        /// </summary>
        [JsonProperty("id", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Id { get; set; } = default!;

        [JsonProperty("externalId", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public ExternalId ExternalId { get; set; } = new ExternalId();

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } = default!;

        [JsonProperty("alternativeName", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? AlternativeName { get; set; } = default!;

        [JsonProperty("enName", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? EnName { get; set; } = default!;

        [JsonProperty("names", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Name> Names { get; set; } = new System.Collections.ObjectModel.Collection<Name>();

        /// <summary>
        /// Тип тайтла. Доступны: movie | tv-series | cartoon | anime | animated-series | tv-show
        /// </summary>
        [JsonProperty("type", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Type { get; set; } = default!;

        /// <summary>
        /// Тип тайтла в числовом обозначении. Доступны: 1 (movie) | 2 (tv-series) | 3 (cartoon) | 4 (anime) | 5 (animated-series) | 6 (tv-show)
        /// </summary>
        [JsonProperty("typeNumber", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double TypeNumber { get; set; } = default!;

        /// <summary>
        /// Год премьеры. При поиске по этому полю, можно использовать интервалы 1860-2030
        /// </summary>
        [JsonProperty("year", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Year { get; set; } = default!;

        /// <summary>
        /// Описание тайтла
        /// </summary>
        [JsonProperty("description", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Description { get; set; } = default!;

        /// <summary>
        /// Сокращенное описание
        /// </summary>
        [JsonProperty("shortDescription", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? ShortDescription { get; set; } = default!;

        /// <summary>
        /// Слоган
        /// </summary>
        [JsonProperty("slogan", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Slogan { get; set; } = default!;

        /// <summary>
        /// Статус релиза тайтла. Доступные значения: filming | pre-production | completed | announced | post-production
        /// </summary>
        [JsonProperty("status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Status { get; set; } = default!;

        [JsonProperty("rating", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public Rating Rating { get; set; } = default!;

        [JsonProperty("votes", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public Votes Votes { get; set; } = default!;

        /// <summary>
        /// Продолжительность фильма
        /// </summary>
        [JsonProperty("movieLength", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? MovieLength { get; set; } = default!;

        /// <summary>
        /// Возрастной рейтинг по MPAA
        /// </summary>
        [JsonProperty("ratingMpaa", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? RatingMpaa { get; set; } = default!;

        /// <summary>
        /// Возрастной рейтинг
        /// </summary>
        [JsonProperty("ageRating", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? AgeRating { get; set; } = default!;

        [JsonProperty("logo", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public Logo Logo { get; set; } = default!;

        [JsonProperty("poster", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public ShortImage Poster { get; set; } = default!;

        [JsonProperty("backdrop", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public ShortImage Backdrop { get; set; } = default!;

        [JsonProperty("videos", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public VideoTypes Videos { get; set; } = default!;

        [JsonProperty("genres", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ItemName> Genres { get; set; } = default!;

        [JsonProperty("countries", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ItemName> Countries { get; set; } = default!;

        [JsonProperty("persons", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PersonInMovie> Persons { get; set; } = default!;

        [JsonProperty("reviewInfo", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public ReviewInfo ReviewInfo { get; set; } = default!;

        [JsonProperty("seasonsInfo", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SeasonInfo> SeasonsInfo { get; set; } = default!;

        [JsonProperty("budget", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public CurrencyValue Budget { get; set; } = default!;

        [JsonProperty("fees", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public Fees Fees { get; set; } = default!;

        [JsonProperty("premiere", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public Premiere Premiere { get; set; } = default!;

        [JsonProperty("similarMovies", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<LinkedMovie> SimilarMovies { get; set; } = default!;

        [JsonProperty("sequelsAndPrequels", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<LinkedMovie> SequelsAndPrequels { get; set; } = default!;

        [JsonProperty("watchability", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public Watchability Watchability { get; set; } = default!;

        [JsonProperty("releaseYears", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<YearRange> ReleaseYears { get; set; } = default!;

        /// <summary>
        /// Позиция тайтла в топ 10. Чтобы найти фильмы участвующие в рейтинге используйте: `!null`
        /// </summary>
        [JsonProperty("top10", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Top10 { get; set; } = default!;

        /// <summary>
        /// Позиция тайтла в топ 250. Чтобы найти фильмы участвующие в рейтинге используйте: `!null`
        /// </summary>
        [JsonProperty("top250", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Top250 { get; set; } = default!;

        /// <summary>
        /// Признак того, что тайтл находится в прокате
        /// </summary>
        [JsonProperty("ticketsOnSale", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? TicketsOnSale { get; set; } = default!;

        /// <summary>
        /// Продолжительность всех серий
        /// </summary>
        [JsonProperty("totalSeriesLength", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? TotalSeriesLength { get; set; } = default!;

        /// <summary>
        /// Средняя продолжительность серии
        /// </summary>
        [JsonProperty("seriesLength", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? SeriesLength { get; set; } = default!;

        /// <summary>
        /// Признак сериала
        /// </summary>
        [JsonProperty("isSeries", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public bool IsSeries { get; set; } = default!;

        [JsonProperty("audience", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Audience>? Audience { get; set; } = default!;

        [JsonProperty("facts", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<FactInMovie> Facts { get; set; } = new System.Collections.ObjectModel.Collection<FactInMovie>();

        [JsonProperty("imagesInfo", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public Images ImagesInfo { get; set; } = new Images();

        [JsonProperty("productionCompanies", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<VendorImage> ProductionCompanies { get; set; } = new System.Collections.ObjectModel.Collection<VendorImage>();

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class MovieDocsResponseDtoV1_3
    {
        [JsonProperty("docs", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<MovieDtoV1_3> Docs { get; set; } = new System.Collections.ObjectModel.Collection<MovieDtoV1_3>();

        /// <summary>
        /// Общее количество результатов
        /// </summary>
        [JsonProperty("total", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Total { get; set; } = default!;

        /// <summary>
        /// Количество результатов на странице
        /// </summary>
        [JsonProperty("limit", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Limit { get; set; } = default!;

        /// <summary>
        /// Текущая страница
        /// </summary>
        [JsonProperty("page", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Page { get; set; } = default!;

        /// <summary>
        /// Сколько страниц всего
        /// </summary>
        [JsonProperty("pages", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Pages { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class UnauthorizedErrorResponseDto
    {
        [JsonProperty("statusCode", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double StatusCode { get; set; } = default!;

        [JsonProperty("message", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Message { get; set; } = default!;

        [JsonProperty("error", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Error { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ForbiddenErrorResponseDto
    {
        [JsonProperty("statusCode", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double StatusCode { get; set; } = default!;

        [JsonProperty("message", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Message { get; set; } = default!;

        [JsonProperty("error", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Error { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ErrorResponseDto
    {
        [JsonProperty("statusCode", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double StatusCode { get; set; } = default!;

        [JsonProperty("message", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Message { get; set; } = default!;

        [JsonProperty("error", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Error { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class MeiliMovieEntity
    {
        [JsonProperty("id", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Id { get; set; } = default!;

        [JsonProperty("name", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Name { get; set; } = default!;

        [JsonProperty("alternativeName", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string AlternativeName { get; set; } = default!;

        [JsonProperty("enName", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string EnName { get; set; } = default!;

        [JsonProperty("names", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<string> Names { get; set; } = new System.Collections.ObjectModel.Collection<string>();

        [JsonProperty("type", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Type { get; set; } = default!;

        [JsonProperty("year", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Year { get; set; } = default!;

        [JsonProperty("description", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Description { get; set; } = default!;

        [JsonProperty("shortDescription", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string ShortDescription { get; set; } = default!;

        [JsonProperty("logo", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Logo { get; set; } = default!;

        [JsonProperty("poster", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Poster { get; set; } = default!;

        [JsonProperty("backdrop", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Backdrop { get; set; } = default!;

        [JsonProperty("rating", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Rating { get; set; } = default!;

        [JsonProperty("votes", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Votes { get; set; } = default!;

        [JsonProperty("movieLength", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double MovieLength { get; set; } = default!;

        [JsonProperty("genres", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<string> Genres { get; set; } = new System.Collections.ObjectModel.Collection<string>();

        [JsonProperty("countries", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<string> Countries { get; set; } = new System.Collections.ObjectModel.Collection<string>();

        [JsonProperty("releaseYears", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<double> ReleaseYears { get; set; } = new System.Collections.ObjectModel.Collection<double>();

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SearchMovieResponseDto
    {
        [JsonProperty("docs", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<MeiliMovieEntity> Docs { get; set; } = new System.Collections.ObjectModel.Collection<MeiliMovieEntity>();

        /// <summary>
        /// Общее количество результатов
        /// </summary>
        [JsonProperty("total", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Total { get; set; } = default!;

        /// <summary>
        /// Количество результатов на странице
        /// </summary>
        [JsonProperty("limit", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Limit { get; set; } = default!;

        /// <summary>
        /// Текущая страница
        /// </summary>
        [JsonProperty("page", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Page { get; set; } = default!;

        /// <summary>
        /// Сколько страниц всего
        /// </summary>
        [JsonProperty("pages", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Pages { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class NominationAward
    {
        [JsonProperty("title", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Title { get; set; } = default!;

        [JsonProperty("year", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Year { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Nomination
    {
        [JsonProperty("award", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public NominationAward Award { get; set; } = new NominationAward();

        [JsonProperty("title", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Title { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PartialTypeClass
    {
        [JsonProperty("nomination", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public Nomination Nomination { get; set; } = default!;

        [JsonProperty("winning", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public bool Winning { get; set; } = default!;

        [JsonProperty("movieId", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double MovieId { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class MovieAwardDocsResponseDto
    {
        [JsonProperty("docs", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PartialTypeClass> Docs { get; set; } = new System.Collections.ObjectModel.Collection<PartialTypeClass>();

        /// <summary>
        /// Общее количество результатов
        /// </summary>
        [JsonProperty("total", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Total { get; set; } = default!;

        /// <summary>
        /// Количество результатов на странице
        /// </summary>
        [JsonProperty("limit", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Limit { get; set; } = default!;

        /// <summary>
        /// Текущая страница
        /// </summary>
        [JsonProperty("page", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Page { get; set; } = default!;

        /// <summary>
        /// Сколько страниц всего
        /// </summary>
        [JsonProperty("pages", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Pages { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class MovieDtoV1
    {
        /// <summary>
        /// Id фильма с кинопоиска
        /// </summary>
        [JsonProperty("id", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Id { get; set; } = default!;

        [JsonProperty("externalId", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public ExternalId ExternalId { get; set; } = new ExternalId();

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } = default!;

        [JsonProperty("alternativeName", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? AlternativeName { get; set; } = default!;

        [JsonProperty("enName", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? EnName { get; set; } = default!;

        [JsonProperty("names", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Name> Names { get; set; } = new System.Collections.ObjectModel.Collection<Name>();

        /// <summary>
        /// Тип тайтла. Доступны: movie | tv-series | cartoon | anime | animated-series | tv-show
        /// </summary>
        [JsonProperty("type", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Type { get; set; } = default!;

        /// <summary>
        /// Тип тайтла в числовом обозначении. Доступны: 1 (movie) | 2 (tv-series) | 3 (cartoon) | 4 (anime) | 5 (animated-series) | 6 (tv-show)
        /// </summary>
        [JsonProperty("typeNumber", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double TypeNumber { get; set; } = default!;

        /// <summary>
        /// Год премьеры. При поиске по этому полю, можно использовать интервалы 1860-2030
        /// </summary>
        [JsonProperty("year", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Year { get; set; } = default!;

        /// <summary>
        /// Описание тайтла
        /// </summary>
        [JsonProperty("description", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Description { get; set; } = default!;

        /// <summary>
        /// Сокращенное описание
        /// </summary>
        [JsonProperty("shortDescription", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? ShortDescription { get; set; } = default!;

        /// <summary>
        /// Слоган
        /// </summary>
        [JsonProperty("slogan", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Slogan { get; set; } = default!;

        /// <summary>
        /// Статус релиза тайтла. Доступные значения: filming | pre-production | completed | announced | post-production
        /// </summary>
        [JsonProperty("status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Status { get; set; } = default!;

        [JsonProperty("rating", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public Rating Rating { get; set; } = default!;

        [JsonProperty("votes", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public Votes Votes { get; set; } = default!;

        /// <summary>
        /// Продолжительность фильма
        /// </summary>
        [JsonProperty("movieLength", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? MovieLength { get; set; } = default!;

        /// <summary>
        /// Возрастной рейтинг по MPAA
        /// </summary>
        [JsonProperty("ratingMpaa", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? RatingMpaa { get; set; } = default!;

        /// <summary>
        /// Возрастной рейтинг
        /// </summary>
        [JsonProperty("ageRating", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? AgeRating { get; set; } = default!;

        [JsonProperty("logo", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public Logo Logo { get; set; } = default!;

        [JsonProperty("poster", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public ShortImage Poster { get; set; } = default!;

        [JsonProperty("backdrop", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public ShortImage Backdrop { get; set; } = default!;

        [JsonProperty("videos", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public VideoTypes Videos { get; set; } = default!;

        [JsonProperty("genres", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ItemName> Genres { get; set; } = default!;

        [JsonProperty("countries", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ItemName> Countries { get; set; } = default!;

        [JsonProperty("persons", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PersonInMovie> Persons { get; set; } = default!;

        [JsonProperty("reviewInfo", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public ReviewInfo ReviewInfo { get; set; } = default!;

        [JsonProperty("seasonsInfo", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SeasonInfo> SeasonsInfo { get; set; } = default!;

        [JsonProperty("budget", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public CurrencyValue Budget { get; set; } = default!;

        [JsonProperty("fees", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public Fees Fees { get; set; } = default!;

        [JsonProperty("premiere", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public Premiere Premiere { get; set; } = default!;

        [JsonProperty("similarMovies", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<LinkedMovie> SimilarMovies { get; set; } = default!;

        [JsonProperty("sequelsAndPrequels", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<LinkedMovie> SequelsAndPrequels { get; set; } = default!;

        [JsonProperty("watchability", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public Watchability Watchability { get; set; } = default!;

        [JsonProperty("releaseYears", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<YearRange> ReleaseYears { get; set; } = default!;

        /// <summary>
        /// Позиция тайтла в топ 10. Чтобы найти фильмы участвующие в рейтинге используйте: `!null`
        /// </summary>
        [JsonProperty("top10", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Top10 { get; set; } = default!;

        /// <summary>
        /// Позиция тайтла в топ 250. Чтобы найти фильмы участвующие в рейтинге используйте: `!null`
        /// </summary>
        [JsonProperty("top250", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Top250 { get; set; } = default!;

        [JsonProperty("facts", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<FactInMovie> Facts { get; set; } = new System.Collections.ObjectModel.Collection<FactInMovie>();

        [JsonProperty("imagesInfo", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public Images ImagesInfo { get; set; } = new Images();

        [JsonProperty("productionCompanies", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<VendorImage> ProductionCompanies { get; set; } = new System.Collections.ObjectModel.Collection<VendorImage>();

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class MovieDocsResponseDtoV1
    {
        [JsonProperty("docs", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<MovieDtoV1> Docs { get; set; } = new System.Collections.ObjectModel.Collection<MovieDtoV1>();

        /// <summary>
        /// Общее количество результатов
        /// </summary>
        [JsonProperty("total", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Total { get; set; } = default!;

        /// <summary>
        /// Количество результатов на странице
        /// </summary>
        [JsonProperty("limit", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Limit { get; set; } = default!;

        /// <summary>
        /// Текущая страница
        /// </summary>
        [JsonProperty("page", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Page { get; set; } = default!;

        /// <summary>
        /// Сколько страниц всего
        /// </summary>
        [JsonProperty("pages", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Pages { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PossibleValueDto
    {
        /// <summary>
        /// Значение по которому нужно делать запрос в базу данных
        /// </summary>
        [JsonProperty("name", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Name { get; set; } = default!;

        /// <summary>
        /// Вспомогательное значение
        /// </summary>
        [JsonProperty("slug", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Slug { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Episode
    {
        [JsonProperty("number", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Number { get; set; } = default!;

        [JsonProperty("name", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Name { get; set; } = default!;

        [JsonProperty("enName", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string EnName { get; set; } = default!;

        [JsonProperty("description", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Description { get; set; } = default!;

        [JsonProperty("date", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Date { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Season
    {
        [JsonProperty("movieId", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double MovieId { get; set; } = default!;

        [JsonProperty("number", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Number { get; set; } = default!;

        [JsonProperty("episodesCount", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double EpisodesCount { get; set; } = default!;

        [JsonProperty("episodes", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Episode> Episodes { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SeasonDocsResponseDto
    {
        [JsonProperty("docs", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Season> Docs { get; set; } = new System.Collections.ObjectModel.Collection<Season>();

        /// <summary>
        /// Общее количество результатов
        /// </summary>
        [JsonProperty("total", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Total { get; set; } = default!;

        /// <summary>
        /// Количество результатов на странице
        /// </summary>
        [JsonProperty("limit", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Limit { get; set; } = default!;

        /// <summary>
        /// Текущая страница
        /// </summary>
        [JsonProperty("page", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Page { get; set; } = default!;

        /// <summary>
        /// Сколько страниц всего
        /// </summary>
        [JsonProperty("pages", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Pages { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Review
    {
        [JsonProperty("id", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Id { get; set; } = default!;

        [JsonProperty("movieId", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double MovieId { get; set; } = default!;

        [JsonProperty("title", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Title { get; set; } = default!;

        [JsonProperty("type", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Type { get; set; } = default!;

        [JsonProperty("review", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Review1 { get; set; } = default!;

        [JsonProperty("date", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Date { get; set; } = default!;

        [JsonProperty("author", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Author { get; set; } = default!;

        [JsonProperty("authorId", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double AuthorId { get; set; } = default!;

        [JsonProperty("userRating", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double UserRating { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ReviewDocsResponseDto
    {
        [JsonProperty("docs", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Review> Docs { get; set; } = new System.Collections.ObjectModel.Collection<Review>();

        /// <summary>
        /// Общее количество результатов
        /// </summary>
        [JsonProperty("total", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Total { get; set; } = default!;

        /// <summary>
        /// Количество результатов на странице
        /// </summary>
        [JsonProperty("limit", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Limit { get; set; } = default!;

        /// <summary>
        /// Текущая страница
        /// </summary>
        [JsonProperty("page", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Page { get; set; } = default!;

        /// <summary>
        /// Сколько страниц всего
        /// </summary>
        [JsonProperty("pages", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Pages { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class MeiliPersonEntity
    {
        [JsonProperty("id", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Id { get; set; } = default!;

        [JsonProperty("name", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Name { get; set; } = default!;

        [JsonProperty("enName", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string EnName { get; set; } = default!;

        [JsonProperty("photo", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Photo { get; set; } = default!;

        [JsonProperty("sex", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Sex { get; set; } = default!;

        [JsonProperty("growth", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Growth { get; set; } = default!;

        [JsonProperty("birthday", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Birthday { get; set; } = default!;

        [JsonProperty("death", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Death { get; set; } = default!;

        [JsonProperty("age", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Age { get; set; } = default!;

        [JsonProperty("birthPlace", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<string> BirthPlace { get; set; } = new System.Collections.ObjectModel.Collection<string>();

        [JsonProperty("deathPlace", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<string> DeathPlace { get; set; } = new System.Collections.ObjectModel.Collection<string>();

        [JsonProperty("profession", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<string> Profession { get; set; } = new System.Collections.ObjectModel.Collection<string>();

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SearchPersonResponseDto
    {
        [JsonProperty("docs", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<MeiliPersonEntity> Docs { get; set; } = new System.Collections.ObjectModel.Collection<MeiliPersonEntity>();

        /// <summary>
        /// Общее количество результатов
        /// </summary>
        [JsonProperty("total", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Total { get; set; } = default!;

        /// <summary>
        /// Количество результатов на странице
        /// </summary>
        [JsonProperty("limit", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Limit { get; set; } = default!;

        /// <summary>
        /// Текущая страница
        /// </summary>
        [JsonProperty("page", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Page { get; set; } = default!;

        /// <summary>
        /// Сколько страниц всего
        /// </summary>
        [JsonProperty("pages", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Pages { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Movie
    {
        [JsonProperty("id", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Id { get; set; } = default!;

        [JsonProperty("name", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Name { get; set; } = default!;

        [JsonProperty("rating", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Rating { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PersonAward
    {
        [JsonProperty("nomination", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public Nomination Nomination { get; set; } = new Nomination();

        [JsonProperty("winning", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public bool Winning { get; set; } = default!;

        [JsonProperty("personId", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double PersonId { get; set; } = default!;

        [JsonProperty("movie", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public Movie Movie { get; set; } = new Movie();

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PersonAwardDocsResponseDto
    {
        [JsonProperty("docs", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PersonAward> Docs { get; set; } = new System.Collections.ObjectModel.Collection<PersonAward>();

        /// <summary>
        /// Общее количество результатов
        /// </summary>
        [JsonProperty("total", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Total { get; set; } = default!;

        /// <summary>
        /// Количество результатов на странице
        /// </summary>
        [JsonProperty("limit", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Limit { get; set; } = default!;

        /// <summary>
        /// Текущая страница
        /// </summary>
        [JsonProperty("page", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Page { get; set; } = default!;

        /// <summary>
        /// Сколько страниц всего
        /// </summary>
        [JsonProperty("pages", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Pages { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class BirthPlace
    {
        [JsonProperty("value", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Value { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class DeathPlace
    {
        [JsonProperty("value", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Value { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Spouses
    {
        [JsonProperty("id", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Id { get; set; } = default!;

        [JsonProperty("name", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Name { get; set; } = default!;

        [JsonProperty("divorced", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public bool Divorced { get; set; } = default!;

        [JsonProperty("divorcedReason", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string DivorcedReason { get; set; } = default!;

        [JsonProperty("sex", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Sex { get; set; } = default!;

        [JsonProperty("children", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Children { get; set; } = default!;

        [JsonProperty("relation", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Relation { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Profession
    {
        [JsonProperty("value", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Value { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class FactInPerson
    {
        [JsonProperty("value", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Value { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class MovieInPerson
    {
        [JsonProperty("id", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Id { get; set; } = default!;

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } = default!;

        [JsonProperty("alternativeName", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? AlternativeName { get; set; } = default!;

        [JsonProperty("rating", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Rating { get; set; } = default!;

        [JsonProperty("general", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? General { get; set; } = default!;

        [JsonProperty("description", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Description { get; set; } = default!;

        [JsonProperty("enProfession", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? EnProfession { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Person
    {
        [JsonProperty("id", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Id { get; set; } = default!;

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } = default!;

        [JsonProperty("enName", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? EnName { get; set; } = default!;

        [JsonProperty("photo", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Photo { get; set; } = default!;

        [JsonProperty("sex", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sex { get; set; } = default!;

        [JsonProperty("growth", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Growth { get; set; } = default!;

        [JsonProperty("birthday", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Birthday { get; set; } = default!;

        [JsonProperty("death", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Death { get; set; } = default!;

        [JsonProperty("age", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Age { get; set; } = default!;

        [JsonProperty("birthPlace", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BirthPlace> BirthPlace { get; set; } = default!;

        [JsonProperty("deathPlace", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<DeathPlace> DeathPlace { get; set; } = default!;

        [JsonProperty("spouses", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public Spouses Spouses { get; set; } = default!;

        [JsonProperty("countAwards", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double CountAwards { get; set; } = default!;

        [JsonProperty("profession", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Profession> Profession { get; set; } = default!;

        [JsonProperty("facts", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<FactInPerson> Facts { get; set; } = default!;

        [JsonProperty("movies", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<MovieInPerson> Movies { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PersonDocsResponseDto
    {
        [JsonProperty("docs", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Person> Docs { get; set; } = new System.Collections.ObjectModel.Collection<Person>();

        /// <summary>
        /// Общее количество результатов
        /// </summary>
        [JsonProperty("total", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Total { get; set; } = default!;

        /// <summary>
        /// Количество результатов на странице
        /// </summary>
        [JsonProperty("limit", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Limit { get; set; } = default!;

        /// <summary>
        /// Текущая страница
        /// </summary>
        [JsonProperty("page", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Page { get; set; } = default!;

        /// <summary>
        /// Сколько страниц всего
        /// </summary>
        [JsonProperty("pages", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Pages { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class MovieFromStudio
    {
        [JsonProperty("id", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Id { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Studio
    {
        [JsonProperty("id", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Id { get; set; } = default!;

        [JsonProperty("subType", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string SubType { get; set; } = default!;

        [JsonProperty("title", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Title { get; set; } = default!;

        [JsonProperty("type", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public StudioType Type { get; set; } = default!;

        [JsonProperty("movies", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public MovieFromStudio Movies { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class StudioDocsResponseDto
    {
        [JsonProperty("docs", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Studio> Docs { get; set; } = new System.Collections.ObjectModel.Collection<Studio>();

        /// <summary>
        /// Общее количество результатов
        /// </summary>
        [JsonProperty("total", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Total { get; set; } = default!;

        /// <summary>
        /// Количество результатов на странице
        /// </summary>
        [JsonProperty("limit", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Limit { get; set; } = default!;

        /// <summary>
        /// Текущая страница
        /// </summary>
        [JsonProperty("page", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Page { get; set; } = default!;

        /// <summary>
        /// Сколько страниц всего
        /// </summary>
        [JsonProperty("pages", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Pages { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class MovieFromKeyword
    {
        [JsonProperty("id", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Id { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Keyword
    {
        [JsonProperty("id", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Id { get; set; } = default!;

        [JsonProperty("title", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Title { get; set; } = default!;

        [JsonProperty("movies", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public MovieFromKeyword Movies { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class KeywordDocsResponseDto
    {
        [JsonProperty("docs", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Keyword> Docs { get; set; } = new System.Collections.ObjectModel.Collection<Keyword>();

        /// <summary>
        /// Общее количество результатов
        /// </summary>
        [JsonProperty("total", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Total { get; set; } = default!;

        /// <summary>
        /// Количество результатов на странице
        /// </summary>
        [JsonProperty("limit", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Limit { get; set; } = default!;

        /// <summary>
        /// Текущая страница
        /// </summary>
        [JsonProperty("page", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Page { get; set; } = default!;

        /// <summary>
        /// Сколько страниц всего
        /// </summary>
        [JsonProperty("pages", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Pages { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Image
    {
        [JsonProperty("movieId", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double MovieId { get; set; } = default!;

        [JsonProperty("type", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Type { get; set; } = default!;

        [JsonProperty("language", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Language { get; set; } = default!;

        [JsonProperty("url", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Url { get; set; } = default!;

        [JsonProperty("previewUrl", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string PreviewUrl { get; set; } = default!;

        [JsonProperty("height", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Height { get; set; } = default!;

        [JsonProperty("width", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Width { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ImageDocsResponseDto
    {
        [JsonProperty("docs", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Image> Docs { get; set; } = new System.Collections.ObjectModel.Collection<Image>();

        /// <summary>
        /// Общее количество результатов
        /// </summary>
        [JsonProperty("total", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Total { get; set; } = default!;

        /// <summary>
        /// Количество результатов на странице
        /// </summary>
        [JsonProperty("limit", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Limit { get; set; } = default!;

        /// <summary>
        /// Текущая страница
        /// </summary>
        [JsonProperty("page", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Page { get; set; } = default!;

        /// <summary>
        /// Сколько страниц всего
        /// </summary>
        [JsonProperty("pages", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public double Pages { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    [System.Flags]
    public enum Field
    {

        [System.Runtime.Serialization.EnumMember(Value = @"genres.name")]
        Genres_name = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"countries.name")]
        Countries_name = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"type")]
        Type = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"typeNumber")]
        TypeNumber = 8,

        [System.Runtime.Serialization.EnumMember(Value = @"status")]
        Status = 16,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Response
    {
        [JsonProperty("status", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Status { get; set; } = default!;

        [JsonProperty("info", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public IDictionary<string, Anonymous>? Info { get; set; } = default!;

        [JsonProperty("error", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public IDictionary<string, Anonymous2>? Error { get; set; } = default!;

        [JsonProperty("details", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public IDictionary<string, Anonymous3> Details { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Response2
    {
        [JsonProperty("status", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Status { get; set; } = default!;

        [JsonProperty("info", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public IDictionary<string, Anonymous4>? Info { get; set; } = default!;

        [JsonProperty("error", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public IDictionary<string, Anonymous5>? Error { get; set; } = default!;

        [JsonProperty("details", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public IDictionary<string, Anonymous6> Details { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    [System.Flags]
    public enum StudioType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"Производство")]
        Производство = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"Спецэффекты")]
        Спецэффекты = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"Прокат")]
        Прокат = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"Студия дубляжа")]
        Студия_дубляжа = 8,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Anonymous
    {
        [JsonProperty("status", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Status { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Anonymous2
    {
        [JsonProperty("status", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Status { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Anonymous3
    {
        [JsonProperty("status", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Status { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Anonymous4
    {
        [JsonProperty("status", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Status { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Anonymous5
    {
        [JsonProperty("status", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Status { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Anonymous6
    {
        [JsonProperty("status", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public string Status { get; set; } = default!;

        private IDictionary<string, object>? _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }


}

#pragma warning restore 108
#pragma warning restore 114
#pragma warning restore 472
#pragma warning restore 612
#pragma warning restore 1573
#pragma warning restore 1591
#pragma warning restore 8073
#pragma warning restore 3016
#pragma warning restore 8603